from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6192af95ed12'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm;")

    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_range'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_author_trgm', 'books', ['author'], unique=False, postgresql_using='gin', postgresql_ops={'author': 'gin_trgm_ops'})
    op.create_index('idx_title_trgm', 'books', ['title'], unique=False, postgresql_using='gin', postgresql_ops={'title': 'gin_trgm_ops'})
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_title_trgm', table_name='books', postgresql_using='gin', postgresql_ops={'title': 'gin_trgm_ops'})
    op.drop_index('idx_author_trgm', table_name='books', postgresql_using='gin', postgresql_ops={'author': 'gin_trgm_ops'})
    op.drop_table('books')
    # ### end Alembic commands ###
